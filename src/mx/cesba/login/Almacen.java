/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mx.cesba.login;

import conexion.conexion;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author alanh
 */
public class Almacen extends javax.swing.JFrame {
    
    conexion con = new conexion();
    Connection cn;
    Statement st;
    ResultSet rs;
    DefaultTableModel modelo;
    
    public Almacen(){
         initComponents();
        
        this.setLocationRelativeTo(null);
        this.setTitle("Almacen");
        this.setResizable(false);
      
        
    }
       
        
    /**
     * Creates new form Almacen
     */
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btn_borrar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        btn_actualizar = new javax.swing.JButton();
        txt_id = new javax.swing.JTextField();
        btn_consul = new javax.swing.JButton();
        txt_cod = new javax.swing.JTextField();
        btn_limpiar = new javax.swing.JButton();
        txt_mod = new javax.swing.JTextField();
        txt_cap = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btn_agregar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 0, 204));
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setFocusTraversalPolicyProvider(true);
        setForeground(new java.awt.Color(0, 0, 0));

        jPanel1.setBackground(new java.awt.Color(102, 255, 102));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("ALMACEN");

        btn_borrar.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btn_borrar.setForeground(new java.awt.Color(255, 0, 51));
        btn_borrar.setText("BORRAR");
        btn_borrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_borrarActionPerformed(evt);
            }
        });

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGEN/storage_122344.png"))); // NOI18N

        btn_actualizar.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btn_actualizar.setText("ACTUALIZAR");
        btn_actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_actualizarActionPerformed(evt);
            }
        });

        txt_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_idActionPerformed(evt);
            }
        });
        txt_id.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_idKeyTyped(evt);
            }
        });

        btn_consul.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btn_consul.setText("CONSULTAR");
        btn_consul.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_consulActionPerformed(evt);
            }
        });

        txt_cod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_codActionPerformed(evt);
            }
        });
        txt_cod.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_codKeyTyped(evt);
            }
        });

        btn_limpiar.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btn_limpiar.setText("LIMPIAR");
        btn_limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_limpiarActionPerformed(evt);
            }
        });

        txt_mod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_modActionPerformed(evt);
            }
        });
        txt_mod.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_modKeyTyped(evt);
            }
        });

        txt_cap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_capActionPerformed(evt);
            }
        });
        txt_cap.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_capKeyTyped(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 255));
        jLabel2.setText("ID");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 255));
        jLabel3.setText("CODIGO");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 255));
        jLabel4.setText("MODELO");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 255));
        jLabel5.setText("CAPACIDAD");

        btn_agregar.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btn_agregar.setText("AGREGAR");
        btn_agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_agregarActionPerformed(evt);
            }
        });

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "codigo", "modelo", "capacidad"
            }
        ));
        tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabla);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(btn_agregar)
                        .addGap(18, 18, 18)
                        .addComponent(btn_borrar)
                        .addGap(18, 18, 18)
                        .addComponent(btn_actualizar)
                        .addGap(13, 13, 13)
                        .addComponent(btn_consul))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txt_id, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel5)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txt_mod, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txt_cap, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addGap(18, 18, 18)
                                    .addComponent(txt_cod, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(104, 104, 104)
                        .addComponent(jLabel6)))
                .addGap(0, 77, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_limpiar)
                .addGap(22, 22, 22))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(214, 214, 214)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_borrar)
                            .addComponent(btn_actualizar)
                            .addComponent(btn_consul)
                            .addComponent(btn_agregar))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txt_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txt_cod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txt_mod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txt_cap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addComponent(btn_limpiar)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_borrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_borrarActionPerformed
        // TODO add your handling code here:
        eliminar();
        listar();

    }//GEN-LAST:event_btn_borrarActionPerformed
void actualizar(){
            int id = Integer.parseInt(txt_id.getText());
            String firstname = txt_cod.getText();
            String lastname = txt_mod.getText();
            int age = Integer.parseInt(txt_cap.getText());
            
            
            String sql = "UPDATE pba set id = '" + id+ "', codigo= '" + firstname+ "', modelo= '" + lastname+ "' ,capacidad= '" + age+ "'where ID=" +id;
                    
                    try{
                        cn = con.getConnection();
                        st = cn.createStatement();
                        st.executeUpdate(sql);
                        JOptionPane.showMessageDialog(null,"DATOS ACTULIZADOS CORRECTAMENTE");
                    } catch (Exception e){
                        JOptionPane.showMessageDialog(null,"DATOS NO SE GUARDARAN CORRECTAMENTE");
                        limpiartable();
                        
                    }
            
            
        }
    private void btn_actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_actualizarActionPerformed
        // TODO add your handling code here:
        int actualizar = tabla.getSelectedRowCount();
        if(actualizar>=1){
            actualizar();
            limpiartable();
            listar();

        }if(actualizar<=0){
            JOptionPane.showMessageDialog(null,"NO HAY DATOS QUE ACTUALIZAR");
            limpiartable();
        }

    }//GEN-LAST:event_btn_actualizarActionPerformed

    private void btn_consulActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_consulActionPerformed
        // TODO add your handling code here:
        listar();

    }//GEN-LAST:event_btn_consulActionPerformed

    private void btn_limpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_limpiarActionPerformed
        // TODO add your handling code here:

        limpiartable();

        txt_id.setText("");
        txt_cod.setText("");
        txt_mod.setText("");
        txt_cap.setText("");
        

    }//GEN-LAST:event_btn_limpiarActionPerformed

    private void txt_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_idActionPerformed

    private void txt_idKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_idKeyTyped
        // TODO add your handling code here:
        char solonumero = evt.getKeyChar();

        if (Character.isLetter(solonumero)){
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null,"INGRESAR SOLO NUMEROS");

        }

    }//GEN-LAST:event_txt_idKeyTyped

    private void txt_codActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_codActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_codActionPerformed

    private void txt_codKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_codKeyTyped
        // TODO add your handling code here:
       

       

    }//GEN-LAST:event_txt_codKeyTyped

    private void txt_modActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_modActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_modActionPerformed

    private void txt_modKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_modKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();

        if(Character.isLowerCase(c)){
            String cad = ("" + c).toUpperCase();
            c = cad.charAt(0);
            evt.setKeyChar(c);
        }

        if(Character.isDigit(c)){
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null,"INGRESAR SOLO TEXTO¡¡");
        }
    }//GEN-LAST:event_txt_modKeyTyped

    private void txt_capActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_capActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_capActionPerformed

    private void txt_capKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_capKeyTyped
        // TODO add your handling code here:
        char solonumero = evt.getKeyChar();


            if (Character.isLetter(solonumero)){
                getToolkit().beep();
                evt.consume();
                JOptionPane.showMessageDialog(null,"INGRESAR SOLO NUMEROS");

            }
        
    }//GEN-LAST:event_txt_capKeyTyped

    private void btn_agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_agregarActionPerformed
        // TODO add your handling code here:
        Agregar();

    }//GEN-LAST:event_btn_agregarActionPerformed

    private void tablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaMouseClicked
        // TODO add your handling code here:
        int fila = tabla.getSelectedRow();
        
        if (fila == -1){
            JOptionPane.showMessageDialog(null,"NO HAS SELECCIONADO EL USUARIO");
    
        } else {
            int row = Integer.parseInt((String) tabla.getValueAt(fila, 0).toString());
            
            int id = Integer.parseInt((String) tabla.getValueAt(fila, 0).toString());
            
            String fn = (String) tabla.getValueAt(fila, 1);
            String ln = (String) tabla.getValueAt(fila, 2);
            int age = Integer.parseInt((String) tabla.getValueAt(fila, 3).toString());
            
           
           txt_id.setText(""+id);
           txt_cod.setText(fn);
           txt_mod.setText(ln);
           txt_cap.setText(""+age);
           
           
           
    }
    }//GEN-LAST:event_tablaMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Almacen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Almacen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Almacen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Almacen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Almacen().setVisible(true);
            }
        });
    }
    
    void listar(){
        String sql = "select * from pba";
        
        try{
            cn = con.getConnection();
            try {
                st = cn.createStatement();
            } catch (SQLException ex) {
                Logger.getLogger(Read.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                rs = st.executeQuery(sql);
            } catch (SQLException ex) {
                Logger.getLogger(Read.class.getName()).log(Level.SEVERE, null, ex);
            }
            Object [] empleado = new Object[4];
            modelo = (DefaultTableModel) tabla.getModel();
            
            try {
                while(rs.next()){
                    empleado[0] = rs.getInt("id");
                    empleado[1] = rs.getString("codigo");
                    empleado[2] = rs.getString("modelo");
                    empleado[3] = rs.getInt("capacidad");
                  
                    
                    modelo.addRow(empleado);
                }
                    tabla.setModel(modelo);
                   
            } catch (SQLException ex) {
                Logger.getLogger(Read.class.getName()).log(Level.SEVERE, null, ex);
            }
catch (Exception e){
            
        }
        } catch (Exception e){
            
        }
        
        
       
        
    }
    
    void Agregar(){
            int id = Integer.parseInt(txt_id.getText());
        
        String firstName = txt_cod.getText();
        String lastName = txt_mod.getText();
        int age = Integer.parseInt(txt_cap.getText());
        
      
    try {
            String sql = "INSERT INTO pba (id, codigo, modelo, capacidad) values ('" + id + "', '" + firstName + "', '" + lastName + "', '" + age + "')";
        
                    cn = con.getConnection();
                    st = cn.createStatement();
                    st.executeUpdate(sql);
                    
                    JOptionPane.showMessageDialog(null, "DATOS GUARDADOS");
                    limpiartable();
                    
                    }catch (Exception e) {
                        //JOptionPane.showMessageDialog(null, "DATOS NO GUARDADOS");
                    }
        }
        void limpiartable(){
            for(int i = 0; i <= tabla.getRowCount(); i++){
                modelo.setRowCount(0);
            }
            
        }
        
        void eliminar (){
            int fila = tabla.getRowCount();
            int id = Integer.parseInt(txt_id.getText());
            
            if (fila == 1){
                JOptionPane.showMessageDialog(null,"SELECCIONE UNA FILA PARA BORRAR REGISTRO");
                
            } else{ 
                try{
                    String sql = "DELETE FROM rh.pba where id =" +id;
                    cn = con.getConnection();
                    st = cn.createStatement();
                    st.executeUpdate(sql);
                    
                    JOptionPane.showMessageDialog(null,"DATOS BORRADOS CORRECTAMENTE");
                    
                    limpiartable();
                    
                } catch (Exception e){
                    
                }
            }
        }
        

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_actualizar;
    private javax.swing.JButton btn_agregar;
    private javax.swing.JButton btn_borrar;
    private javax.swing.JButton btn_consul;
    private javax.swing.JButton btn_limpiar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabla;
    private javax.swing.JTextField txt_cap;
    private javax.swing.JTextField txt_cod;
    private javax.swing.JTextField txt_id;
    private javax.swing.JTextField txt_mod;
    // End of variables declaration//GEN-END:variables
}
